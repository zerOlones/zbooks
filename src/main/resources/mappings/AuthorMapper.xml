<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.AuthorMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Author" >
    <constructor >
      <idArg column="author_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="id_card" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="true_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pojo.Author" >
    <constructor >
      <idArg column="author_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="id_card" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="true_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="account" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    author_id, name, sex, id_card, true_name, password, qq, phone, email, title
  </sql>
  <sql id="Blob_Column_List" >
    account
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from author
    where author_id = #{authorId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from author
    where author_id = #{authorId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.Author" >
    insert into author (author_id, name, sex, 
      id_card, true_name, password, 
      qq, phone, email, title, 
      account)
    values (#{authorId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{idCard,jdbcType=VARCHAR}, #{trueName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{account,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Author" >
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authorId != null" >
        author_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="trueName != null" >
        true_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="account != null" >
        account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authorId != null" >
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Author" >
    update author
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pojo.Author" >
    update author
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      id_card = #{idCard,jdbcType=VARCHAR},
      true_name = #{trueName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      account = #{account,jdbcType=LONGVARCHAR}
    where author_id = #{authorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Author" >
    update author
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      id_card = #{idCard,jdbcType=VARCHAR},
      true_name = #{trueName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=INTEGER}
  </update>
</mapper>